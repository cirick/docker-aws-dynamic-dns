#!/bin/bash

set -eu;

log()
{
    # log to the pipe (mkfifo)
    echo "[$1] $2" >> /var/log/update;
}

# Hosted Zone ID e.g. BJBK35SKMM9OE
# ZONEID="enter zone id here"

# The CNAME you want to update e.g. hello.example.com
# RECORDSET="enter cname here"

# More advanced options below
# The Time-To-Live of this recordset
TTL=300
# Change this if you want
COMMENT="Auto updating @ $(date)"
# Change to AAAA if using an IPv6 address
TYPE="A"

# Get the external IP address from OpenDNS (more reliable than other providers)
IP=$(dig +short myip.opendns.com @resolver1.opendns.com)

function valid_ip()
{
    local  ip=$1
    local  stat=1

    if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        OIFS=$IFS
        IFS='.'
        ip=($ip)
        IFS=$OIFS
        [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
            && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
        stat=$?
    fi
    return $stat
}

IPFILE="/var/log/update-route53.ip"

if ! valid_ip "$IP"; then
    log warning "Invalid IP address: $IP";
    exit 1
fi

# Check if the IP has changed
if [ ! -f "$IPFILE" ]
    then
    touch "$IPFILE"
fi

if grep -Fxq "$IP" "$IPFILE"; then
    # code if found
    log info "IP is still $IP. Exiting";
    exit 0
else
    log info "IP has changed to $IP";
    # Fill a temp file with valid JSON
    TMPFILE=$(mktemp /tmp/temporary-file.XXXXXXXX)
    cat > "${TMPFILE}" << EOF
    {
      "Comment":"$COMMENT",
      "Changes":[
        {
          "Action":"UPSERT",
          "ResourceRecordSet":{
            "ResourceRecords":[
              {
                "Value":"$IP"
              }
            ],
            "Name":"$RECORDSET",
            "Type":"$TYPE",
            "TTL":$TTL
          }
        }
      ]
    }
EOF

    # Update the Hosted Zone record
    aws route53 change-resource-record-sets \
        --hosted-zone-id "$ZONEID" \
        --change-batch file://"$TMPFILE";

    if [ $? -eq 0 ]
    then
        log info "Successfully updated IP $IP";
    else
        log error "Failed updating IP $IP";
    fi

    # Clean up
    rm "$TMPFILE"
fi

# All Done - cache the IP address for next time
echo "$IP" > "$IPFILE";
